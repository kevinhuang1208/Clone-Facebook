{"version":3,"sources":["context/Modal.js","store/session.js","store/index.js","store/posts.js","store/comments.js","store/messages.js","store/users.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","components/OpenModalButton/index.js","components/LoginFormPage/index.js","components/SignupFormModal/index.js","components/LandingPage/index.js","components/PostFormModal/index.js","components/EditPostFormModal/index.js","components/DeletePostModal/index.js","components/PostModal/CommentComponent.js","components/PostModal/EachComment.js","components/PostModal/index.js","components/HomePage/eachPost.js","components/Load/index.js","components/HomePage/index.js","components/Footer/index.js","components/Sockets/ChatLog.js","components/Sockets/EachMessage.js","components/Sockets/index.js","components/Sockets/MyLog.js","App.js","index.js"],"names":["ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","useState","modalContent","setModalContent","onModalClose","setOnModalClose","contextValue","closeModal","Provider","value","ref","Modal","useContext","current","ReactDOM","createPortal","id","onClick","useModal","SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","login","email","password","dispatch","fetch","method","headers","body","JSON","stringify","response","ok","json","data","status","errors","signUp","firstname","lastname","enhancer","GET_ALL_POSTS","DELETE_POST","POST_POST","EDIT_POST","postPost","post","editPostThunk","postId","res","edited_data","postPostThunk","deletePost","deletePostThunk","getAllPostsThunk","normalPost","posts","forEach","e","PostsReducer","state","action","newState","GET_ALL_COMMENTS","GET_POST_COMMENTS","POST_POST_COMMENT","EDIT_POST_COMMENT","DELETE_POST_COMMENT","postPostComment","comment","postPostCommentThunk","editPostComment","editPostCommentThunk","commentId","deletePostComment","deletePostCommentThunk","postCommentsReducer","commentsState","Object","values","map","GET_ALL_MESSAGES","GET_USER_MESSAGES","POST_MESSAGE","EDIT_MESSAGE","DELETE_MESSAGE","postMessage","message","editMessage","editMessageThunk","messageId","deleteMessage","deleteMessageThunk","MessagesReducer","messagesState","GET_ALL_USERS","usersReducer","rootReducer","combineReducers","session","comments","users","messages","applyMiddleware","thunk","configureStore","preloadedState","createStore","ProfileButton","useDispatch","showMenu","setShowMenu","ulRef","useEffect","closeMenu","contains","target","document","addEventListener","removeEventListener","className","preventDefault","Navigation","isLoaded","sessionUser","useSelector","exact","to","src","alt","OpenModalButton","modalComponent","buttonText","onButtonClick","LoginFormPage","setEmail","setPassword","setErrors","handleSubmit","onSubmit","error","idx","placeholder","onChange","required","SignupFormModal","firstName","setFirstName","lastName","setLastName","confirmPassword","setConfirmPassword","validEmail","RegExp","test","length","disabled","LandingPage","handleDemoSubmit","sessionActions","PostFormModal","setStatus","undefined","upload","setUpload","submitted","setSubmitted","formData","FormData","append","accept","filename","name","files","EditPostFormModal","substr","width","height","controls","controlsList","DeletePostModal","handleClick","CommentComponent","description","setDescription","EachComment","showResults","setShowResults","showDelete","setShowDelete","a","onClickDelete","userFirstName","userLastName","userId","PostModal","eachUser","EachPost","history","useHistory","ulDropDown","push","commentCount","Load","HomePage","loaded","setLoaded","allUsersObj","allUsers","then","normalUser","postsArr","reverse","alert","Footer","href","rel","ChatLog","messagesObj","messagesArr","normalMessage","date","createdAt","slice","EachMessage","socket","stateMessage","setStateMessage","MyLog","Chat","chatInput","setChatInput","setMessages","io","on","chat","readyState","disconnect","ind","Date","msg","emit","App","setIsLoaded","path","store","Root","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e639877.chunk.js","sourcesContent":["import React, { useRef, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [modalContent, setModalContent] = useState(null);\n  // callback function that will be called when modal is closing\n  const [onModalClose, setOnModalClose] = useState(null);\n\n  const closeModal = () => {\n    setModalContent(null); // clear the modal contents\n    // If callback function is truthy, call the callback function and reset it\n    // to null:\n    if (typeof onModalClose === 'function') {\n      setOnModalClose(null);\n      onModalClose();\n    }\n  };\n\n  const contextValue = {\n    modalRef, // reference to modal div\n    modalContent, // React component to render inside modal\n    setModalContent, // function to set the React component to render inside modal\n    setOnModalClose, // function to set the callback function called when modal is closing\n    closeModal // function to close the modal\n  };\n\n  return (\n    <>\n      <ModalContext.Provider value={contextValue}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal() {\n  const { modalRef, modalContent, closeModal } = useContext(ModalContext);\n  // If there is no div referenced by the modalRef or modalContent is not a\n  // truthy value, render nothing:\n  if (!modalRef || !modalRef.current || !modalContent) return null;\n\n  // Render the following component to the div referenced by the modalRef\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={closeModal} />\n      <div id=\"modal-content\">\n        {modalContent}\n      </div>\n    </div>,\n    modalRef.current\n  );\n}\n\nexport const useModal = () => useContext(ModalContext);","// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\n\nconst setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nconst removeUser = () => ({\n\ttype: REMOVE_USER,\n});\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(setUser(data));\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/login\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport const logout = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/logout\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\tif (response.ok) {\n\t\tdispatch(removeUser());\n\t}\n};\n\nexport const signUp = (firstname, lastname, email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/signup\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tfirstname,\n\t\t\tlastname,\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else {\n\t\treturn null\n\t}\n\n};\n\nexport default function reducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { user: action.payload };\n\t\tcase REMOVE_USER:\n\t\t\treturn { user: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session'\nimport PostsReducer from './posts';\nimport postCommentsReducer from './comments';\nimport MessagesReducer from './messages';\nimport usersReducer from './users';\n\nconst rootReducer = combineReducers({\n  session,\n  posts: PostsReducer,\n  comments: postCommentsReducer,\n  users: usersReducer,\n  messages: MessagesReducer\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","const GET_ALL_POSTS = \"posts/getAllPosts\"\nconst DELETE_POST = \"posts/deletePost\"\nconst POST_POST = \"posts/postPost\"\nconst EDIT_POST = \"posts/editPost\"\n\nconst postPost = (post) => {\n    return {\n        type: POST_POST,\n        payload: post\n    }\n}\n\nconst editPost = (postEdit) => {\n    return {\n        type: EDIT_POST,\n        payload: postEdit\n    }\n}\n\nexport const editPostThunk = (postId, post) => async (dispatch) => {\n    const res = await fetch(`/api/posts/${postId}/edit`, {\n        method: 'PUT',\n        body: post\n    })\n    const edited_data = await res.json()\n    if (res.ok) {\n        dispatch(editPost(edited_data))\n        return edited_data\n    } else {\n        return edited_data\n    }\n\n}\n\nexport const postPostThunk = (post) => async (dispatch) => {\n\n    const response = await fetch('/api/posts/new', {\n        method: \"POST\",\n        body: post\n    })\n    const data = await response.json();\n\n    if (response.ok) {\n        dispatch(postPost(data))\n        return data\n    }\n\n    return null\n}\n\nconst deletePost = (postId) => {\n    return {\n        type: DELETE_POST,\n        postId\n    }\n}\nconst getAllPosts = (post) => {\n    return {\n        type: GET_ALL_POSTS,\n        payload: post\n    }\n}\n\nexport const deletePostThunk = (postId) => async (dispatch) => {\n    const res = await fetch(`/api/posts/${postId}`, {\n        method: 'DELETE'\n    })\n    if (res.ok) {\n        dispatch(deletePost(postId))\n    } else {\n        return false\n    }\n}\n\nexport const getAllPostsThunk = () => async (dispatch) => {\n    const response = await fetch('/api/posts')\n    const data = await response.json()\n\n    if (response.ok) {\n        const normalPost = {}\n        data.posts.forEach((e) => {\n            normalPost[e.id] = e\n        })\n        dispatch(getAllPosts(normalPost))\n        return normalPost\n    }\n    return null\n}\n\nconst initialState = {}\n\nconst PostsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ALL_POSTS: {\n            let newState = { ...state }\n            newState = { ...action.payload }\n            return newState\n        }\n        case POST_POST: {\n            let newState = { ...state }\n            newState[action.payload.id] = action.payload\n            return newState\n        }\n        case EDIT_POST: {\n            let newState = { ...state }\n            newState[action.payload.id] = action.payload\n            return newState\n        }\n        case DELETE_POST: {\n            let newState = { ...state }\n            delete newState[action.postId]\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\nexport default PostsReducer\n","import { getAllPostsThunk } from \"./posts\"\n\nconst GET_ALL_COMMENTS = \"post/getAllComments\"\nconst GET_POST_COMMENTS = \"post/getPostComments\"\nconst POST_POST_COMMENT = \"post/postComment\"\nconst EDIT_POST_COMMENT = \"post/editComment\"\nconst DELETE_POST_COMMENT = \"post/deleteComment\"\n\nconst getAllComments = (comment) => {\n    return {\n        type: GET_ALL_COMMENTS,\n        payload: comment\n    }\n}\n\nexport const getAllCommentsThunk = () => async (dispatch) => {\n    const response = await fetch('/api/posts/comments')\n\n    const data = await response.json()\n\n    if (response.ok) {\n        const normalComment = {}\n        data.comments.forEach((e) => {\n            normalComment[e.id] = e\n        })\n        dispatch(getAllComments(normalComment))\n\n        return normalComment\n    }\n    return null\n}\nconst postPostComment = (comment) => {\n    return {\n        type: POST_POST_COMMENT,\n        payload: comment\n    }\n}\n\nexport const postPostCommentThunk = (comment, postId) => async (dispatch) =>{\n    const response = await fetch(`/api/posts/${postId}/comments/new`, {\n        method: 'post',\n        body: comment\n    })\n    const data = await response.json()\n\n    if(response.ok){\n        dispatch(postPostComment(data))\n        dispatch(getAllPostsThunk())\n        return data\n    }\n\n    return null\n}\n\nconst editPostComment = (comment) => {\n    return {\n        type: EDIT_POST_COMMENT,\n        payload: comment\n    }\n}\n\nexport const editPostCommentThunk = (comment,postId,commentId) => async (dispatch) =>{\n    const response = await fetch(`/api/posts/${postId}/comments/${commentId}`, {\n        method: 'put',\n        body: comment\n    })\n    const data = await response.json()\n\n    if(response.ok){\n        dispatch(editPostComment(data))\n        dispatch(getAllPostsThunk())\n        return data\n    } else {\n        return data\n    }\n}\n\nconst getPostComments = (comments) => {\n    return {\n        type: GET_POST_COMMENTS,\n        payload: comments\n    }\n}\n\nexport const getPostCommentsThunk = (postId) => async (dispatch) =>{\n\n    const response = await fetch(`/api/posts/${postId}/comments`)\n    const data = await response.json()\n\n    if(response.ok){\n        const commentsObj = {}\n\n        data.comments.forEach((comment) => {\n            commentsObj[comment.id] = comment\n        })\n        dispatch(getPostComments(commentsObj))\n        return commentsObj\n    }\n\n    return null\n}\n\nconst deletePostComment = (commentId) => {\n    return{\n        type: DELETE_POST_COMMENT,\n        commentId\n    }\n\n}\n\nexport const deletePostCommentThunk = (postId, commentId) => async(dispatch)=>{\n\n    const res = await fetch(`/api/posts/${postId}/comments/${commentId}/delete`,{\n        method: 'DELETE'\n    })\n    if(res.ok){\n        dispatch(deletePostComment(commentId))\n        dispatch(getAllPostsThunk())\n    }\n    return null\n}\n\n\n\n\n\n\nconst initialState = {}\n\n\nconst postCommentsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_ALL_COMMENTS: {\n            let newState = { ...state }\n            const commentsState = {}\n            Object.values(action.payload).map((comment) => {\n                commentsState[comment.id] = comment;\n            })\n            newState = commentsState\n            return newState\n        }\n        case GET_POST_COMMENTS:{\n            let newState = {}\n            newState = {...action.payload}\n            return newState\n        }\n        case POST_POST_COMMENT:{\n            let newState = {...state}\n            newState[action.payload.id] = action.payload\n            return newState\n        }\n        case EDIT_POST_COMMENT: {\n            let newState = { ...state }\n            newState[action.payload.id] = action.payload\n            return newState\n        }\n        case DELETE_POST_COMMENT:{\n            let newState={...state}\n            delete newState[action.commentId]\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\nexport default postCommentsReducer\n","const GET_ALL_MESSAGES = \"message/getAllMessages\"\nconst GET_USER_MESSAGES = \"message/getUserMessages\"\nconst POST_MESSAGE = \"message/postMessage\"\nconst EDIT_MESSAGE = \"message/editMessage\"\nconst DELETE_MESSAGE = \"message/deleteMessage\"\n\nconst getAllMessages = (message) => {\n    return {\n        type: GET_ALL_MESSAGES,\n        payload: message\n    }\n}\n\nexport const getAllMessagesThunk = () => async (dispatch) => {\n    const response = await fetch('/api/messages')\n\n    const data = await response.json()\n\n    if (response.ok) {\n        const normalMessage = {}\n        data.messages.forEach((e) => {\n            normalMessage[e.id] = e\n        })\n        dispatch(getAllMessages(normalMessage))\n\n        return normalMessage\n    }\n    return null\n}\nconst postMessage = (message) => {\n    return {\n        type: POST_MESSAGE,\n        payload: message\n    }\n}\n\nexport const postMessageThunk = (message) => async (dispatch) =>{\n    const response = await fetch('/api/messages/new', {\n        method: 'post',\n        body: message\n    })\n    const data = await response.json()\n\n    if(response.ok){\n        await dispatch(postMessage(data))\n        return data\n    }\n\n    return null\n}\n\nconst editMessage = (message) => {\n    return {\n        type: EDIT_MESSAGE,\n        payload: message\n    }\n}\n\nexport const editMessageThunk = (message, messageId) => async (dispatch) =>{\n    const response = await fetch(`/api/messages/${messageId}`, {\n        method: 'put',\n        body: message\n    })\n    const data = await response.json()\n\n    if(response.ok){\n        dispatch(editMessage(data))\n        return data\n    } else {\n        return data\n    }\n}\n\nconst getUserMessages = (messages) => {\n    return {\n        type: GET_USER_MESSAGES,\n        payload: messages\n    }\n}\n\nexport const getUserMessagesThunk = (userId) => async (dispatch) =>{\n\n    const response = await fetch(`/api/messages/${userId}/messages`)\n    const data = await response.json()\n\n    if(response.ok){\n        const messagesObj = {}\n\n        data.messages.forEach((message) => {\n            messagesObj[message.id] = message\n        })\n        dispatch(getUserMessages(messagesObj))\n        return messagesObj\n    }\n\n    return null\n}\n\nconst deleteMessage = (messageId) => {\n    return{\n        type: DELETE_MESSAGE,\n        messageId\n    }\n\n}\n\nexport const deleteMessageThunk = (messageId) => async(dispatch)=>{\n\n    const res = await fetch(`/api/messages/${messageId}/delete`,{\n        method: 'DELETE'\n    })\n    if(res.ok){\n        dispatch(deleteMessage(messageId))\n    }\n    return null\n}\n\n\n\n\n\n\nconst initialState = {}\n\n\nconst MessagesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_ALL_MESSAGES: {\n            let newState = { ...state }\n            const messagesState = {}\n            Object.values(action.payload).map((message) => {\n                messagesState[message.id] = message;\n            })\n            newState = messagesState\n            return newState\n        }\n        case GET_USER_MESSAGES:{\n            let newState = {}\n            newState = {...action.payload}\n            return newState\n        }\n        case POST_MESSAGE:{\n            let newState = {...state}\n            newState[action.payload.id] = action.payload\n            return newState\n        }\n        case EDIT_MESSAGE: {\n            let newState = { ...state }\n            newState[action.payload.id] = action.payload\n            return newState\n        }\n        case DELETE_MESSAGE:{\n            let newState={...state}\n            delete newState[action.messageId]\n            return newState\n        }\n        case 'RESET_STATE':\n            return initialState;\n        default:\n            return state\n    }\n}\n\nexport default MessagesReducer\n","const GET_ALL_USERS = \"user/getAllUsers\"\n\n\nconst getAllUsers = (users) => {\n    return {\n        type: GET_ALL_USERS,\n        payload: users\n    }\n}\n\n\nexport const getAllUsersThunk = () => async (dispatch) => {\n    const response = await fetch('/api/users')\n    const data = await response.json()\n\n    if (response.ok) {\n        const normalUser = {}\n        data.users.forEach((user) => {\n            normalUser[user.id] = user\n        })\n        dispatch(getAllUsers(normalUser))\n        return normalUser\n    }\n\n    return null\n}\n\nconst initialState = {}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ALL_USERS: {\n            let newState = { ...state }\n            newState = { ...action.payload }\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\nexport default usersReducer\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../store/session\";\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = (e) => {\n      if (!ulRef.current.contains(e.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener(\"click\", closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n  };\n\n  return (\n    <div className=\"logoutButton\">\n      {user ?\n      <button onClick={handleLogout}>Log Out</button> : null }\n    </div>\n  );\n}\n\nexport default ProfileButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\n\nfunction Navigation({ isLoaded }){\n\tconst sessionUser = useSelector(state => state.session.user);\n\n\treturn (\n\t\t<ul className='nav-bar'>\n\t\t\t<li>\n\t\t\t\t<NavLink exact to=\"/\">\n\t\t\t\t\t<img src='https://cdn.discordapp.com/attachments/1117948168353628201/1118958833050587306/facequote-low-resolution-logo-color-on-transparent-background.png' alt='FaceQuote'/>\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t\t{isLoaded && (\n\t\t\t\t<li>\n\t\t\t\t\t<ProfileButton user={sessionUser} />\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</ul>\n\t);\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { useModal } from '../../context/Modal';\n\nfunction OpenModalButton({\n  modalComponent, // component to render inside the modal\n  buttonText, // text of the button that opens the modal\n  onButtonClick, // optional: callback function that will be called once the button that opens the modal is clicked\n  onModalClose // optional: callback function that will be called once the modal is closed\n}) {\n  const { setModalContent, setOnModalClose } = useModal();\n\n  const onClick = () => {\n    if (onModalClose) setOnModalClose(onModalClose);\n    setModalContent(modalComponent);\n    if (onButtonClick) onButtonClick();\n  };\n\n  return (\n    <button onClick={onClick}>{buttonText}</button>\n  );\n}\n\nexport default OpenModalButton;","import React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport './LoginForm.css';\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  return (\n    <div className=\"wholeLoginFormContainer\">\n      <form onSubmit={handleSubmit} id=\"loginForm\">\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n          <input className=\"loginInput\"\n            placeholder=\"Email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <input className=\"loginInput\"\n            placeholder=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        <button id='formLogin' type=\"submit\">Log In</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginFormPage;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp } from \"../../store/session\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormModal() {\n\tconst dispatch = useDispatch();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [firstName, setFirstName] = useState(\"\");\n\tconst [lastName, setLastName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\tconst [errors, setErrors] = useState([]);\n\tconst { closeModal } = useModal();\n\n\tconst validEmail = new RegExp(\n\t\t'^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$'\n\t );\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tif (!validEmail.test(email)) {\n\t\t\tsetErrors([\n\t\t\t\t\"Email must be in valid format!\"\n\t\t\t]);\n\t\t\treturn\n\t\t }\n\t\tif(password.length < 4 || confirmPassword.length < 4) {\n\t\t\tsetErrors([\n\t\t\t\t\"Password must be more than 3 characters!\"\n\t\t\t])\n\t\t\treturn\n\t\t}\n\t\tif(password.length > 20 || confirmPassword.length > 20) {\n\t\t\tsetErrors([\n\t\t\t\t\"Password cannot exceed 20 characters!\"\n\t\t\t])\n\t\t\treturn\n\t\t}\n\t\tif (password !== confirmPassword) {\n\t\t\tsetErrors([\n\t\t\t\t\"Confirm Password field must be the same as the Password field\",\n\t\t\t]);\n\t\t\treturn\n\t\t}\n\t\tsetErrors([]);\n\t\tawait dispatch(signUp(firstName, lastName, email, password));\n\t\tcloseModal();\n\n\t};\n\n\treturn (\n\t\t<div className=\"wholeSignUpContainer\">\n\t\t\t<div className=\"signUpTextContainer\">\n\t\t\t\t<div className=\"signUpText\">\n\t\t\t\t<h2>Sign Up</h2>\n\t\t\t\t<p>It's quick and easy.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"xButton\" onClick={closeModal}>✖</div>\n\t\t\t</div>\n\t\t\t<form onSubmit={handleSubmit} id=\"signUpForm\">\n\t\t\t\t<ul>\n\t\t\t\t\t{errors.map((error, idx) => (\n\t\t\t\t\t\t<li key={idx}>{error}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"nameFields\">\n\t\t\t\t<input className=\"nameInputs\"\n\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={firstName}\n\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input className=\"nameInputs\"\n\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={lastName}\n\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<input className=\"signUpFormInputs\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input className=\"signUpFormInputs\"\n\t\t\t\t\tplaceholder=\"New Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input className=\"signUpFormInputs\"\n\t\t\t\t\tplaceholder=\"Confirm New Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<div className=\"smallText\">By clicking Sign Up, you agree to our Terms, Privacy Policy and Cookies Policy.</div>\n\t\t\t\t<button className='signUpButton' type=\"submit\" disabled={!firstName || !lastName || !password || !confirmPassword || !email}>Sign Up</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default SignupFormModal;\n","import React from 'react';\nimport OpenModalButton from \"../OpenModalButton\";\nimport LoginFormPage from '../LoginFormPage';\nimport SignupFormModal from '../SignupFormModal';\nimport './LandingPage.css';\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nfunction LandingPage() {\n\n  const dispatch = useDispatch();\n\n\n\n\n\n  const handleDemoSubmit = async (e) => {\n    e.preventDefault();\n    return dispatch(sessionActions.login(\"demo@aa.io\", \"password\"))\n  };\n\n  return (\n    <div className='landingPageContainer'>\n      <div className='wholeFormContainer'>\n      <div className='landingPageSignUpContainer'>\n        <LoginFormPage />\n      </div>\n\t  <div className='landingPageLoginContainer'>\n\t\t<OpenModalButton\n      className='button'\n\t\t\tbuttonText=\"Create new account\"\n\t\t\tmodalComponent={<SignupFormModal/>}\n\t\t/>\n\t  </div>\n    <div className=\"demo-button\">\n      <button type=\"submit\"\n         onClick={handleDemoSubmit}>Demo User Login</button>\n      </div>\n    </div>\n\n    </div>\n\n\n  );\n}\n\nexport default LandingPage;\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useModal } from \"../../context/Modal\";\nimport { getAllPostsThunk } from '../../store/posts';\nimport \"./PostFormModal.css\"\nimport { postPostThunk } from '../../store/posts';\n\n\nconst PostFormModal = ({user}) => {\n    const dispatch = useDispatch()\n    const { closeModal } = useModal();\n    const [status, setStatus] = useState('')\n    const [upload, setUpload] = useState(undefined)\n    const [errors, setErrors] = useState([])\n    const [submitted, setSubmitted] = useState(false)\n\n    useEffect(() => {\n        dispatch(getAllPostsThunk())\n    }, [dispatch])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        setSubmitted(true)\n        formData.append(\"status\", status)\n        formData.append(\"upload\", upload)\n\n        const res = await dispatch(postPostThunk(formData))\n        if (res.errors) {\n            setErrors(res.errors)\n            return\n        }\n        else {\n            closeModal()\n        }\n\n    }\n\n    return (\n        <div className=\"createPostFormContainer\">\n            <h1 className=\"formHeader\">Create Post</h1>\n            {submitted ? (\n                <h2 className='post-form-loading'>Uploading... please wait</h2>\n            ) : null}\n            {errors.length ?\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul> : null}\n            <div className='fullNameDiv'>\n                <div className='propic'></div>\n                <div className='fullname'>{user ? user.firstname : null} {user ? user.lastname : null}</div>\n            </div>\n            <form id='postForm' onSubmit={handleSubmit}>\n\n                <textarea\n                    className='postFormInput'\n                    placeholder=\"What's on your mind?\"\n                    type=\"text\"\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                />\n\n                <div className='filePostDiv'>\n                    <label>\n                        Add to your post:\n                        <input\n                            placeholder=\"add to your post\"\n                            type=\"file\"\n                            accept='.png, .jpg, .jpeg, .gif, .mp4, .mov'\n                            filename={upload && upload.name}\n                            onChange={(e) => setUpload(e.target.files[0])}\n                        />\n                    </label>\n                </div>\n                <button className='postFormButton' disabled={submitted || !status || !upload}>Post</button>\n\n            </form>\n\n\n        </div>\n    )\n}\n\nexport default PostFormModal\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useModal } from \"../../context/Modal\";\nimport { getAllPostsThunk } from '../../store/posts';\nimport \"./EditPostFormModal.css\"\nimport { editPostThunk } from '../../store/posts';\n\nconst EditPostFormModal = ({post, user}) => {\n    const dispatch = useDispatch()\n    const { closeModal } = useModal();\n    const [status, setStatus] = useState(post?.status)\n    const [upload, setUpload] = useState(\"\")\n    const [errors, setErrors] = useState([])\n    const [submitted, setSubmitted] = useState(false)\n\n    useEffect(() => {\n        dispatch(getAllPostsThunk())\n    }, [dispatch])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        setSubmitted(true)\n        formData.append(\"status\", status)\n        formData.append(\"upload\", upload)\n\n        const res = await dispatch(editPostThunk(post.id, formData))\n        if (res.errors) {\n            setErrors(res.errors)\n            return\n        }\n        else {\n            closeModal()\n        }\n\n\n    }\n\n    return (\n        <div className=\"editPostFormContainer\">\n            <div className='editHeaderWButton'>\n                <div className=\"xButton\" onClick={closeModal}>✖</div>\n                <h1 className=\"editFormHeader\">Edit Post</h1>\n            </div>\n            {submitted ? (\n                <h2 className='post-form-loading'>Uploading... please wait</h2>\n            ) : null}\n            {errors.length ?\n                <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                </ul> : null}\n            <div className='editPostUserDetails'>\n                <div className='propic'></div>\n                { user ?\n                    <div>{user.firstname} {user.lastname}</div> : null\n                }\n            </div>\n            <form onSubmit={handleSubmit} id='editForm'>\n\n                <textarea\n                    className='editFormTextArea'\n                    placeholder=\"What's on your mind?\"\n                    type=\"text\"\n                    value={status}\n                    onChange={(e) => setStatus(e.target.value)}\n                />\n\n                <div className='fileInEdit'>\n                    <p>\n                        Current attachment below. Please upload another file if you would like to overwrite this attachment. <b>Please upload the same image if you don't wish to change it</b>\n                    </p>\n                    <div className='fileSrcDiv'>\n                    {post.upload.substr(post.upload.length - 3) === \"mp4\" ?\n                        <video width='700px' height = '400px' controls controlsList=\"nodownload\">\n                            <source src = {post.upload} type= 'video/mp4'>\n                            </source>\n                        </video>\n                        :\n                        <img src={post.upload} alt=\"Post Upload\"/>\n                    }\n                    </div>\n                <div className='filePostDiv'>\n                <label>\n                    Edit your upload:\n                    <input\n                        placeholder=\"add to your post\"\n                        type=\"file\"\n                        accept='.png, .jpg, .jpeg, .gif, .mp4, .mov'\n                        filename={upload && upload.name}\n                        onChange={(e) => setUpload(e.target.files[0])}\n                        />\n                </label>\n                </div>\n                <button disabled={submitted || !status || !upload}>Edit Post</button>\n                </div>\n\n            </form>\n\n\n        </div>\n    )\n}\n\nexport default EditPostFormModal\n","import { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deletePostThunk, getAllPostsThunk } from \"../../store/posts\";\nimport \"./DeletePostModal.css\"\n\n\nconst DeletePostModal = ({ post }) => {\n  const dispatch = useDispatch()\n  const { closeModal } = useModal();\n\n\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    await dispatch(deletePostThunk(post.id))\n    await dispatch(getAllPostsThunk())\n    closeModal()\n  };\n\n  return (\n    <div className='delete-modal-container'>\n\n      <h1>Confirm Delete</h1>\n      <div className=\"random-text\">Are you sure you want to delete this post?</div>\n\n\n      <button className='deleteButton' onClick={(e) => handleClick(e)}>Yes (Delete Post)</button>\n      <button className='dontDeleteButton' onClick={(e) => closeModal()}>No (Keep Post)</button>\n\n    </div>\n  );\n}\n\nexport default DeletePostModal;\n","import { useDispatch } from \"react-redux\"\nimport React, {useState} from \"react\"\nimport { postPostCommentThunk } from \"../../store/comments\"\nimport \"./PostModal.css\"\n\n\nfunction CommentComponent({ post }) {\n    const dispatch = useDispatch()\n    const [description, setDescription] = useState(\"\")\n\n    const handleClick = async (e) => {\n\n        e.preventDefault();\n        const formData = new FormData()\n        formData.append('description', description)\n        await dispatch(postPostCommentThunk(formData, post.id))\n        setDescription(\"\")\n    }\n\n\n    if (!post) return null\n\n\n    else\n        return (\n            <div>\n                <form onSubmit={handleClick} id=\"postComment\">\n                    <div className=\"postAndSubmitComment\">\n                    <input\n                        placeholder='Write a comment...(min. 1 character)'\n                        type='text'\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n\n\n                    <div className='submitButtonCommentDiv'>\n                        <button className=\"submitButtonComment \" disabled={description.length < 1}><img src=\"https://cdn.discordapp.com/attachments/1117948168353628201/1118964736483143772/facequote-website-favicon-color.png\" alt=\"Submit Button\"/></button>\n                    </div>\n                    </div>\n            </form>\n            </div>\n        )\n}\n\nexport default CommentComponent\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport './PostModal.css'\nimport { editPostCommentThunk, deletePostCommentThunk } from \"../../store/comments\";\n\n\nfunction EachComment({post, comment}) {\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.session.user)\n\n    const [description, setDescription] = useState(\"\")\n    const [showResults, setShowResults] = useState(false)\n    const [showDelete, setShowDelete] = useState(false)\n    const [submitted, setSubmitted] = useState(false)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        setSubmitted(true)\n        formData.append('description', description)\n        await dispatch(editPostCommentThunk(formData, post.id, comment.id))\n        await setShowResults(!showResults)\n    }\n    const handleClick = async (e) => {\n        e.preventDefault();\n        await dispatch(deletePostCommentThunk(post.id, comment.id))\n        await setShowDelete(!showDelete)\n      };\n    const onClick = async () => {\n        await setDescription(comment.description)\n        await setShowResults(!showResults)\n    }\n    const onClickDelete = async () => {\n        await setShowDelete(!showDelete)\n    }\n    return (\n    <div className=\"wholeEachComment\">\n        <div className=\"namesEachComment\">{comment.userFirstName} {comment.userLastName}</div>\n\n        {user.id === comment.userId ?\n         <div>\n            { showResults ?\n\n            <div className=\"editCommentDiv\">\n            <form onSubmit={handleSubmit} id=\"editCommentForm\">\n                <input\n                    placeholder={comment.description}\n                    type=\"text\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                <button className=\"editCommentButton\" disabled={!description}><img src=\"https://cdn.discordapp.com/attachments/1117948168353628201/1118964736483143772/facequote-website-favicon-color.png\" alt=\"Edit Comment\"/></button>\n            </form>\n            <button onClick={onClick}>I change my mind</button>\n            </div>\n             : <>{comment.description}</> }\n\n            { showDelete ?\n            <div className=\"deleteCommentSection\">\n            <form onSubmit={handleClick} id=\"deleteCommentForm\">\n            <div>*Are you sure you want to delete this comment?*</div>\n            <button>Delete this comment</button>\n            </form>\n            <button onClick={onClickDelete}>I change my mind</button>\n            </div>\n             : <></> }\n            <div className=\"editAndDeleteButtonsComment\">\n            { !showResults ?\n            <button onClick={onClick} className=\"editACommentButton\">Edit</button>\n            : null }\n\n            { !showDelete ?\n            <button onClick={onClickDelete} className=\"deleteACommentButton\">Delete Comment</button>\n            : null }\n            </div>\n        </div>\n        :\n\n        <>{comment.description}</>}\n    </div>\n)\n}\n\nexport default EachComment;\n","import { useSelector } from \"react-redux\";\nimport './PostModal.css'\nimport CommentComponent from \"./CommentComponent\";\nimport EachComment from \"./EachComment\";\n\n\nfunction PostModal({ post, users }) {\n    const user = useSelector((state) => state.session.user)\n    const posts = useSelector((state) => state.posts)\n\n    if (!post) return null\n    if(!user) return null\n\n    else\n        return (\n            <div className='postModalHomePage'>\n                { users ?\n                    users.map((eachUser) =>\n                        eachUser.id === post.userId ?\n                        <div className=\"postModalName\">{eachUser.firstname} {eachUser.lastname}</div> : null\n                     )\n                : null\n                }\n                <div className='postStatusDiv'>\n                    {post.status}\n                </div>\n                <div className=\"photoPostModal\">\n                <div className=\"postUploadDiv\">\n                {post.upload.substr(post.upload.length - 3) === \"mp4\" ?\n                <video width='680px' height = '400px' controls controlsList=\"nodownload\">\n                      <source src = {post.upload} type= 'video/mp4'>\n                      </source>\n                  </video> :\n                <img src={post.upload} alt=\"Post Upload\"/>\n                }\n                </div>\n                </div>\n                <div className=\"commentPostModal\">\n                <div className=\"commentCountPostModal\">\n                    Comments ▾\n                </div>\n                </div>\n                <div className=\"comments\">\n                { posts[post.id].comments.map(comment => {\n                    return (\n                    <EachComment post={post} comment={comment}/>\n                    )\n                })}\n\n                    <CommentComponent post={post}/>\n                </div>\n                </div>\n\n\n\n        )\n}\n\nexport default PostModal;\n","import { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState, useRef } from \"react\";\nimport OpenModalButton from \"../OpenModalButton\";\nimport EditPostFormModal from \"../EditPostFormModal\";\nimport DeletePostModal from \"../DeletePostModal\";\nimport './eachPost.css'\nimport PostModal from \"../PostModal\";\n\n\nfunction EachPost({ post, users }) {\n    const history = useHistory();\n    const user = useSelector((state) => state.session.user)\n    const [showMenu, setShowMenu] = useState(false);\n    const ulRef = useRef();\n\n    const handleClick = () => {\n        history.push(`/`)\n    }\n\n    const openMenu = () => {\n      if (showMenu) return;\n      setShowMenu(true);\n    };\n\n    useEffect(() => {\n      if (!showMenu) return;\n\n      const closeMenu = (e) => {\n        if (!ulRef.current.contains(e.target)) {\n          setShowMenu(false);\n        }\n      };\n\n      document.addEventListener(\"click\", closeMenu);\n\n      return () => document.removeEventListener(\"click\", closeMenu);\n    }, [showMenu]);\n\n    const ulDropDown = \"post-dropdown\" + (showMenu ? \"\" : \" hidden\");\n    const closeMenu = () => setShowMenu(false);\n\n    if (!post) return null\n\n    else\n        return (\n            <div className='postTileHomePage' onClick={handleClick}>\n            <div className=\"eachPostTopDiv\">\n            { users ?\n              users.map((eachUser) =>\n               eachUser.id === post.userId ?\n                <div className=\"usersName\">{eachUser.firstname} {eachUser.lastname}</div> : null\n              )\n             : null\n            }\n            <div className=\"dropdownButton\" onClick={openMenu}>...\n\n            <div className={ulDropDown} ref={ulRef}>\n                {user && user.id === post.userId ?\n\n                    <OpenModalButton\n                    className='button'\n\t\t\t        buttonText=\"Edit Post\"\n                    onButtonClick={closeMenu}\n\t\t\t        modalComponent={<EditPostFormModal key={post.id} post={post} user={user}/>}\n\t\t        />\n\n                 : null\n                }\n                {user && user.id === post.userId ?\n\n                <OpenModalButton\n                    className='button'\n\t\t\t        buttonText=\"Delete Post\"\n                    onButtonClick={closeMenu}\n\t\t\t        modalComponent={<DeletePostModal key={post.id} post={post}/>}\n\t\t        />\n\n\n                 : null}\n                 </div>\n             </div>\n             </div>\n                <div className='postStatusDiv'>\n                    {post.status}\n                </div>\n                <div className=\"postUploadDiv\">\n                {post.upload.substr(post.upload.length - 3) === \"mp4\" ?\n                <video width='680px' height = '400px' controls controlsList=\"nodownload\">\n                      <source src = {post.upload} type= 'video/mp4'>\n                      </source>\n                  </video> :\n                <img src={post.upload} alt=\"Post Upload\"/>\n                }\n                </div>\n                <div className=\"divToFloat\">\n                <div className=\"commentCount\">\n                    {post.commentCount} Comment(s)\n                </div>\n                </div>\n                <OpenModalButton\n                    className='comments'\n\t\t\t             buttonText=\"Comment\"\n\t\t\t              modalComponent={<PostModal key={post.id} post={post} users={users}/>}\n\t\t            />\n            </div>\n        )\n}\n\nexport default EachPost;\n","import React from \"react\";\nimport './Load.css';\n\nfunction Load () {\n\n  return (\n    <div className=\"loading-container\">\n      <img className=\"loading-gif\"src=\"https://cdn.discordapp.com/attachments/1117948168353628201/1129161502537044018/output-onlinegiftools.gif\" alt=\"Loading Gif\"/>\n    </div>\n  )\n}\n\nexport default Load\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport OpenModalButton from '../OpenModalButton';\nimport PostFormModal from '../PostFormModal';\nimport { getAllPostsThunk } from '../../store/posts';\nimport EachPost from './eachPost';\nimport \"./HomePage.css\"\nimport { getAllUsersThunk } from '../../store/users';\nimport Load from '../Load';\n\n\nfunction HomePage() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [loaded, setLoaded] = useState(false)\n  const posts = useSelector((state) => state.posts)\n  const user = useSelector((state) => state.session.user)\n  const allUsersObj = useSelector((state) => state.users)\n  const allUsers = Object.values(allUsersObj)\n\n\n  const comingSoon = (e) => {\n    e.preventDefault();\n    return alert(\"Feature coming soon!\")\n  }\n\n  useEffect(() => {\n    dispatch(getAllPostsThunk()).then(() => setLoaded(true))\n    dispatch(getAllUsersThunk())\n  }, [dispatch])\n\n  const toChat = () => {\n    history.push(\"/chat\")\n  }\n\n  const postsArr = Object.values(posts)\n  postsArr.reverse()\n\n  if (!user) {\n    history.push(\"/landing\")\n  }\n\n  if (!loaded) {\n    return (\n      <Load />\n    )\n  }\n\n  if(!allUsers) return null;\n\n    return (\n      <div className = 'homePageDiv'>\n        <div className='left-sidebar'>\n          <div className='eachTab'>Home</div>\n          <div className='eachTab' onClick={comingSoon}>\n            {user ? user.firstname: null} {user ? user.lastname: null }\n          </div>\n          <div className='eachTab' onClick={toChat}>\n            Open Discussion\n          </div>\n        </div>\n        <div className='main-section'>\n            <div className='new-post'>\n                <div className='propic'></div>\n                <OpenModalButton\n                    className='open-form'\n                    buttonText= \"What's on your mind?\"\n                    modalComponent={<PostFormModal user={user}/>}\n                />\n            </div>\n            <div className = 'allPostsContainer'>\n                {\n                    postsArr.map(post => (\n                    <EachPost post={post} users={allUsers}/>\n                        ))\n                }\n        </div>\n        </div>\n        <div className='right-sidebar'>\n            <div className='rightSideBarTitle'>Users</div>\n            { allUsers && user ? allUsers.map((eachUser) =>\n              eachUser.id !== user.id ?\n              <div className='eachUserTab'>{eachUser.firstname} {eachUser.lastname}</div> : null\n            )\n            : null\n            }\n        </div>\n      </div>\n    )\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n    return (\n        <div className='footer-container'>\n\n            <div className='footer-contributors'>\n                <div className=\"footerNameBlock\">\n                    <p className=\"footerNameTag\">Kevin Huang</p>\n                    <a href=\"https://linkedin.com/in/kevinhuang147\" target=\"_blank\" rel=\"noreferrer\">\n                        <img className=\"linkedinLogo\" src=\"https://cdn.discordapp.com/attachments/1113213089702228038/1115021661377400832/linkedinLogo.png\" alt='Logo'/>\n                    </a>\n                    <a href=\"https://github.com/kevinhuang1208\" target=\"_blank\" rel=\"noreferrer\">\n                        <img className=\"githubLogo\" src=\"https://cdn.discordapp.com/attachments/1117948168353628201/1121823679731478629/github-g4b811f6c0_640.png\" alt='Logo'/>\n                    </a>\n                </div>\n            </div>\n            <div className='tech-icons-container'>\n                <img className='tech-icons' src=\"https://cdn.discordapp.com/attachments/1118303754714886259/1121552752133292133/JavaScript-logo.png\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.discordapp.com/attachments/1118303754714886259/1121551916028153888/2300px-React-icon.png\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.discordapp.com/attachments/1118303754714886259/1121552416844824636/redux.png\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/amazonwebservices/amazonwebservices-original.svg\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/flask/flask-original.svg\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.discordapp.com/attachments/1118303754714886259/1121551721282408529/postgresql-icon.png\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.discordapp.com/attachments/1118303754714886259/1121556896625729686/free-html5-40-1175193.png\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.discordapp.com/attachments/1118303754714886259/1121557371194458202/css-512.png\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/sqlalchemy/sqlalchemy-original.svg\" alt='Icon'/>\n\n                <img className='tech-icons' src=\"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/socketio/socketio-original.svg\" alt='Icon'/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllMessagesThunk } from \"../../store/messages\";\nimport Load from \"../Load\";\n\nconst ChatLog = () => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    const user = useSelector(state => state.session.user)\n    const messagesObj = useSelector(state => state.messages)\n    const messagesArr = Object.values(messagesObj)\n\n    useEffect(() => {\n        dispatch(getAllMessagesThunk()).then(() => setLoaded(true))\n        return () => {\n            dispatch({ type: 'RESET_STATE' });\n\n        }\n      }, [dispatch])\n\n    const slicer = (date) => {\n        return date.slice(0, 16)\n    }\n\n    if (!loaded) {\n        return (\n          <Load />\n        )\n      }\n\n    return (user && (\n        <div className=\"chatLogDiv\">\n            <h1>Chat Logs</h1>\n            <div className=\"chatLog\">\n                {messagesArr.map((message) => (\n                    <div className=\"savedMsgs\">\n                        <div className=\"wholeEachComment\">{message.userFirstName} {message.userLastName} ({slicer(message.createdAt)}): {message.message}</div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n    )\n};\n\n\nexport default ChatLog;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { editMessageThunk, deleteMessageThunk } from \"../../store/messages\";\n\n\n\n\nfunction EachMessage({message}) {\n    const dispatch = useDispatch();\n    const [stateMessage, setStateMessage] = useState(\"\")\n    const [showResults, setShowResults] = useState(false)\n    const [showDelete, setShowDelete] = useState(false)\n    const [submitted, setSubmitted] = useState(false)\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        setSubmitted(true)\n        formData.append('message', stateMessage)\n        await dispatch(editMessageThunk(formData, message.id))\n        await setShowResults(!showResults)\n    }\n    const handleClick = async (e) => {\n        e.preventDefault();\n        await dispatch(deleteMessageThunk(message.id))\n        await setShowDelete(!showDelete)\n      };\n    const onClick = async () => {\n        await setStateMessage(message.message)\n        await setShowResults(!showResults)\n    }\n    const onClickDelete = async () => {\n        await setShowDelete(!showDelete)\n    }\n\n    const slicer = (date) => {\n        return date.slice(0, 16)\n    }\n\n    return (\n    <div className=\"wholeEachComment\">\n\n\n         <div>\n            { showResults ?\n\n            <div className=\"editCommentDiv\">\n            <form onSubmit={handleSubmit} id=\"editCommentForm\">\n                <input\n                    placeholder={message.message}\n                    type=\"text\"\n                    value={stateMessage}\n                    onChange={(e) => setStateMessage(e.target.value)}\n                />\n                <button className=\"editCommentButton\" disabled={!stateMessage}><img src=\"https://cdn.discordapp.com/attachments/1117948168353628201/1118964736483143772/facequote-website-favicon-color.png\" alt=\"Edit Comment\"/></button>\n            </form>\n            <button onClick={onClick}>I change my mind</button>\n            </div>\n             : <>{message.userFirstName} {message.userLastName} ({slicer(message.createdAt)}): {message.message}</> }\n\n            { showDelete ?\n            <div className=\"deleteCommentSection\">\n            <form onSubmit={handleClick} id=\"deleteCommentForm\">\n            <div>*Are you sure you want to delete this message?*</div>\n            <button>Delete this Message</button>\n            </form>\n            <button onClick={onClickDelete}>I change my mind</button>\n            </div>\n             : <></> }\n            <div className=\"editAndDeleteButtonsComment\">\n            { !showResults ?\n            <button onClick={onClick} className=\"editACommentButton\">Edit</button>\n            : null }\n\n            { !showDelete ?\n            <button onClick={onClickDelete} className=\"deleteACommentButton\">Delete Message</button>\n            : null }\n            </div>\n        </div>\n    </div>\n)\n}\n\nexport default EachMessage;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport OpenModalButton from \"../OpenModalButton\";\nimport { postMessageThunk } from \"../../store/messages\";\nimport ChatLog from \"./ChatLog\";\nimport MyLog from \"./MyLog\";\nimport './Socket.css'\nlet socket;\n\nconst Chat = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [chatInput, setChatInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const user = useSelector(state => state.session.user)\n    // const messagesObj = useSelector(state => state.messages)\n    // const messagesArr = Object.values(messagesObj)\n\n    useEffect(() => {\n        // open socket connection\n        // create websocket\n        socket = io();\n        socket.on(\"chat\", (chat) => {\n            setMessages(messages => [...messages, chat])\n        })\n        // when component unmounts, disconnect\n        return (() => {\n            if (socket.readyState === 1) { // <-- This is important\n                socket.disconnect();\n            }\n        })\n    }, [])\n\n    const updateChatInput = (e) => {\n        setChatInput(e.target.value)\n    };\n\n    const sendChat = (e) => {\n        e.preventDefault()\n        socket.emit(\"chat\", { firstName: user.firstname, lastName: user.lastname, msg: chatInput});\n        const formData = new FormData()\n        formData.append('message', chatInput)\n        dispatch(postMessageThunk(formData))\n        setChatInput(\"\")\n    }\n\n    if (!user) {\n        history.push(\"/landing\")\n      }\n\n    return (user && (\n        <div className=\"wholeSocketDiv\">\n            <div className=\"messageAboveMessageLog\">Welcome to Open Discussion! Feel free to discuss and share your thoughts on any quotes that you find interesting! Below is a free space where you are able to chat with every registered user.\n            <br />*Exiting this page will <i>clear the chat.</i> By clicking \"Chat Log\" you can <i>access the chat history</i>*\n            <br />*By clicking \"My Logs\" you can <i>edit and delete your OWN messages</i>*\n            </div>\n            <div className=\"messageLog\">\n                {messages.map((message, ind) => (\n                    <div key={ind}>{`${message.firstName} ${message.lastName} (${new Date()}): ${message.msg}`}</div>\n                ))}\n            </div>\n            <OpenModalButton\n                    className='chatLogModalButton'\n                    buttonText= \"Chat Log\"\n                    modalComponent={<ChatLog key={user}/>}\n            />\n            <OpenModalButton\n                    className='myLogsModalButton'\n                    buttonText= \"My Logs\"\n                    modalComponent={<MyLog key={user}/>}\n            />\n            <form id='webSocketForm' onSubmit={sendChat}>\n                <input\n                    value={chatInput}\n                    onChange={updateChatInput}\n                />\n                <button className=\"webSocketButton\" disabled={!chatInput}><img src=\"https://cdn.discordapp.com/attachments/1117948168353628201/1118964736483143772/facequote-website-favicon-color.png\" alt=\"Websocket Button\"/></button>\n            </form>\n        </div>\n    )\n    )\n};\n\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserMessagesThunk } from \"../../store/messages\";\nimport EachMessage from \"./EachMessage\";\nimport Load from \"../Load\";\n\nconst MyLog = () => {\n    const dispatch = useDispatch()\n    const [loaded, setLoaded] = useState(false)\n    const user = useSelector(state => state.session.user)\n    const messagesObj = useSelector(state => state.messages)\n    const messagesArr = Object.values(messagesObj)\n\n    useEffect(() => {\n        dispatch(getUserMessagesThunk(user.id)).then(() => setLoaded(true))\n        return () => {\n            dispatch({ type: 'RESET_STATE' });\n\n        }\n      }, [])\n\n      if (!loaded) {\n        return (\n          <Load />\n        )\n      }\n\n    return (user && (\n        <div className=\"myLogsDiv\">\n            <h1>My Logs</h1>\n            <div className=\"messageMyLog\">\n                {messagesArr ? messagesArr.map((message) => {\n                    return (\n                    <EachMessage key={message} message={message}/>\n                )}): null}\n             </div>\n         </div>\n     )\n    )\n};\n\n\nexport default MyLog;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { authenticate } from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport LandingPage from \"./components/LandingPage\";\nimport HomePage from \"./components/HomePage\";\nimport Footer from \"./components/Footer\";\nimport Chat from \"./components/Sockets\";\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(authenticate()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n\n\n  return (\n    <>\n      <div id='wholeApp'>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n\n          <Route exact path='/chat'>\n            <Chat/>\n          </Route>\n\n          <Route exact path='/landing'>\n            <LandingPage />\n          </Route>\n\n          <Route exact path='/'>\n            <HomePage />\n          </Route>\n\n\n        </Switch>\n      )}\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { ModalProvider, Modal } from \"./context/Modal\";\nimport configureStore from \"./store\";\nimport * as sessionActions from \"./store/session\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n\twindow.store = store;\n\twindow.sessionActions = sessionActions;\n}\n\n// Wrap the application with the Modal provider and render the Modal component\n// after the App component so that all the Modal content will be layered as\n// HTML elements on top of the all the other HTML elements:\nfunction Root() {\n\treturn (\n\t\t<ModalProvider>\n\t\t\t<Provider store={store}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<App />\n\t\t\t\t\t<Modal />\n\t\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n\t\t</ModalProvider>\n\t);\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Root />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}